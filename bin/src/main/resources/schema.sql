-- drop table if exists oauth_client_details;
-- create table oauth_client_details (
--   client_id VARCHAR(255) PRIMARY KEY,
--   resource_ids VARCHAR(255),
--   client_secret VARCHAR(255),
--   scope VARCHAR(255),
--   authorized_grant_types VARCHAR(255),
--   web_server_redirect_uri VARCHAR(255),
--   authorities VARCHAR(255),
--   access_token_validity INTEGER,
--   refresh_token_validity INTEGER,
--   additional_information VARCHAR(4096),
--   autoapprove VARCHAR(255)
-- );
-- drop table if exists oauth_client_token;
-- create table oauth_client_token (
--   token_id VARCHAR(255),
--   token LONG VARBINARY,
--   authentication_id VARCHAR(255) PRIMARY KEY,
--   user_name VARCHAR(255),
--   client_id VARCHAR(255)
-- );
-- drop table if exists oauth_access_token;
-- create table oauth_access_token (
--   token_id VARCHAR(255),
--   token LONG VARBINARY,
--   authentication_id VARCHAR(255) PRIMARY KEY,
--   user_name VARCHAR(255),
--   client_id VARCHAR(255),
--   authentication LONG VARBINARY,
--   refresh_token VARCHAR(255)
-- );
-- drop table if exists oauth_refresh_token;
-- create table oauth_refresh_token (
--   token_id VARCHAR(255),
--   token LONG VARBINARY,
--   authentication LONG VARBINARY
-- );
-- drop table if exists oauth_code;
-- create table oauth_code (
--   code VARCHAR(255), authentication LONG VARBINARY
-- );
-- drop table if exists oauth_approvals;
-- create table oauth_approvals (
--   userId VARCHAR(255),
--   clientId VARCHAR(255),
--   scope VARCHAR(255),
--   status VARCHAR(10),
--   expiresAt TIMESTAMP,
--   lastModifiedAt TIMESTAMP
-- );
-- drop table if exists ClientDetails;
-- create table ClientDetails (
--   appId VARCHAR(255) PRIMARY KEY,
--   resourceIds VARCHAR(255),
--   appSecret VARCHAR(255),
--   scope VARCHAR(255),
--   grantTypes VARCHAR(255),
--   redirectUrl VARCHAR(255),
--   authorities VARCHAR(255),
--   access_token_validity INTEGER,
--   refresh_token_validity INTEGER,
--   additionalInformation VARCHAR(4096),
--   autoApproveScopes VARCHAR(255)
-- );

-- create table if not exists user(
--     user_uuid bigint(20) not null PRIMARY KEY,
--     name varchar(250) not null,
--     email varchar(250) not null,
--     password varchar(250) not null,
--     username varchar(250) not null
-- );

-- create table if not exists authority(
--     role_uuid bigint(20) not null PRIMARY KEY,
--     authority varchar(250) not null
-- );

-- create table if not exists user_authority(
--     user_id bigint(20) not null,
--     authority_id bigint(20) not null
-- );

-- insert into user values('1', 'mainuls18@gmail.com', 1, 'Syed Mainul Hasan', '$2a$11$YYR/AdrdqKLyolQGY/Fyz.uJ5fK1BtLTimyJaw9a3eQA6COT21HEi', 'mainul35');

-- insert into authority('1', 'ROLE_USER');

-- insert into user_authority('1', '1');